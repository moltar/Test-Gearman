=pod

=head1 NAME

Test::Gearman - A class for testing and mocking Gearman workers.

=head1 VERSION

version v0.2.0

=head1 SYNOPSIS

 use Test::Gearman;

 my $tg = Test::Gearman->new(
     functions => {
         reverse => sub {
             my $job      = shift;
             my $workload = $job->workload();
             my $result   = reverse($workload);

             return $result;
         },
     },
 );

 ## now you can either get a client object
 ## from Test::Gearman object
 my ($ret, $result) = $tg->client->do('reverse', 'this is a test');

 ## or build your own
 use Gearman::XS::Client;
 my $client = Gearman::XS::Client->new;
 $client->add_server($tg->host, $tg->port);
 my ($ret, $job_handle) = $client->do_background('reverse', 'hello world');

=head1 DESCRIPTION

Test::Gearman is a class for testing Gearman workers.

This class only works with C version of gearmand, and L<Gearman::XS>
bindings.

An actual Gearman daemon is launched, and workers are forked
when you instantiate the class. The Gearman and workers are automatically
shut down and destroyed when the instance of the class goes out of scope.

By default Gearman daemon will listen on a random available L</port>.

=head1 PUBLIC ATTRIBUTES

=head2 functions

A HashRef of CodeRefs that stores worker function names as keys and
a CodeRef as work to be done.

 my $tg = Test::Gearman->new(
     functions => {
         function_name => sub {
             ## worker code
         },
     },
 );

=head3 function_names()

Returns a list of all registered worker function names.

=head3 get_function($function_name)

Returns a CodeRef for the given function name.

=head2 gearmand_bin

Path to Gearman daemon binary. If one is not provided it tries
to find it in the C<$PATH>.

B<Note>: this must be a C version of gearmand, and not the Perl version
as they have different interfaces.

You can also set the path to the binary via C<$ENV{GEARMAND}>.

=head2 host

Host to which Gearman daemon will bind.

Default is 127.0.0.1.

=head2 port

Port on which gearmand runs. It is picked randomly at the start, but
you can manually specify a port if you wish.

=head2 worker_timeout

Worker timeout in seconds.

Default is 5.

=head2 client_timeout

Client timeout in seconds.

Default is 5.

=head2 client

An instance of L<Gearman::XS::Client> that you can use to inject jobs.

=head2 log_file

Gearman daemon log file. This is synonymous with C<--log-file> option.

Default: stderr

=head1 PRIVATE ATTRIBUTES

=head2 server

An instance of L<Proc::Guard> that runs gearmand server.

=head2 worker

An instance of L<Proc::Guard> that runs workers.

=head1 AUTHOR

Roman F. <romanf@cpan.org>

=head1 COPYRIGHT AND LICENSE

This software is copyright (c) 2013 by L<Need Backup|http://www.needbackup.com/>.

This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.

